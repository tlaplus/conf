<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TLA&#43; Conf</title>
    <link>http://2019.tlapl.us/</link>
    <description>Recent content on TLA&#43; Conf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://2019.tlapl.us/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DavidMcNeil</title>
      <link>http://2019.tlapl.us/program/davidmcneil/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/davidmcneil/</guid>
      <description>S-expressions for Actions with Logic Temporal David McNeil Viasat This talk will present the SALT tool which provides &amp;ldquo;S-expressions for Actions with Logic Temporal&amp;rdquo;. Specifically, SALT was designed and built with the goal of providing a one-to-one mapping from Clojure syntax to TLA+ syntax. This work was born out of practical experience in creating TLA+ models of communication protocols in the satellite communication industry. Software developers working on TLA+ in this domain learned to deeply appreciate the mathematical precision and conciseness of the TLA+ syntax as well as the capabilities of the TLA+ Toolbox for validating models.</description>
    </item>
    
    <item>
      <title>HillelWayne</title>
      <link>http://2019.tlapl.us/program/hillelwayne/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/hillelwayne/</guid>
      <description>On Advocacy and Instruction Hillel Wayne hillelwayne.com Why don’t people write specifications? Well, why should they? Programmers have no more reason to believe us than they do any of the 10,000 movements that promised to help and miserably failed. Many programmers believe two things about specification: it is hard, and it is useless. These are not myths we can undo overnight. But addressing them is profoundly important for convincing people to bother learning TLA+.</description>
    </item>
    
    <item>
      <title>IvanBeschastnikh</title>
      <link>http://2019.tlapl.us/program/ivanbeschastnikh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/ivanbeschastnikh/</guid>
      <description>Compiling Distributed System Models into Implementations with PGo Ivan Beschastnikh, Renato Costa, Matthew Do, Finn Hackett University of British Columbia, University of Waterloo Distributed systems are difficult to design and implement correctly. In response, both research and industry are exploring applications of formal methods to distributed systems. For example, Amazon has reported using TLA+ and PlusCal to verify its web services. A key challenge in this domain is the missing link between the formal design of a system and its implementation.</description>
    </item>
    
    <item>
      <title>JayParlar</title>
      <link>http://2019.tlapl.us/program/jayparlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/jayparlar/</guid>
      <description>Alloy for TLA+ Users Jay Parlar Okta Alloy (http://alloytools.org/) is a modelling language for software systems, out of MIT. Like TLA+, it comes bundled with an IDE and a model checker. Its mathematical foundation is also based on sets and predicate logic. Where Alloy differs from TLA+ is in its &amp;ldquo;visualizer&amp;rdquo;, its use of SAT solvers, and its focus on modelling relational data instead of concurrent systems. This talk provides a high level overview of Alloy for a typical TLA+ user, and show instances where one might choose Alloy over TLA+, and vice-versa, and more importantly, why it&amp;rsquo;s hugely valuable to know both systems.</description>
    </item>
    
    <item>
      <title>MuratDemirbas</title>
      <link>http://2019.tlapl.us/program/muratdemirbas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/muratdemirbas/</guid>
      <description>High-level TLA+ specifications for the five consistency levels offered by Azure Cosmos DB Murat Demirbas Microsoft Customers of Azure Cosmos DB can associate any number of Azure regions (50+ at the time of writing) to their Cosmos database, at any time. The clients can read and write locally with any of the regions associated with the given Cosmos database. For the read operations, Cosmos DB allows developers to choose between five well-defined consistency models along the consistency spectrum – strong, bounded staleness, session, consistent prefix and eventual.</description>
    </item>
    
    <item>
      <title>RussellMull</title>
      <link>http://2019.tlapl.us/program/russellmull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/russellmull/</guid>
      <description>Exposing Design Flaws in Shared-Clock Systems with TLA+ Russell Mull Auxon Many cyber-physical systems (e.g. Industrial Automation systems, Medical Devices, and Autonomous Vehicles) are designed with the presumption of a reliable shared clock. This is a very risky approach. Shared clocks can drift or even fail, leading to catastrophic results. I will present an approach to modeling shared-clock systems with TLA+ that can expose clock-based failure modes and drift envelopes, allowing the system designer to better understand the system&amp;rsquo;s failure boundaries.</description>
    </item>
    
    <item>
      <title>VaibhavSharma</title>
      <link>http://2019.tlapl.us/program/vaibhavsharma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/vaibhavsharma/</guid>
      <description>TLA+ @ Azure IoT Vaibhav Sharma Microsoft TBD</description>
    </item>
    
    <item>
      <title>WilliamSchultz</title>
      <link>http://2019.tlapl.us/program/williamschultz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/williamschultz/</guid>
      <description>Fixing a MongoDB Replication Protocol Bug with TLA+ William Schultz MongoDB The MongoDB database replication protocol is heavily influenced by the Raft consensus algorithm, but it makes several design choices that diverge from Raft for the sake of performance and integration with the rest of the MongoDB database. Verifying the correctness of these design choices can be non-trivial. One subtle area of the protocol has to do with how operation log entries are determined to be durable after they are replicated to a set of nodes.</description>
    </item>
    
    <item>
      <title>YannickWelsch</title>
      <link>http://2019.tlapl.us/program/yannickwelsch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/yannickwelsch/</guid>
      <description>Using TLA+ for fun and profit in the development of Elasticsearch Yannick Welsch Elastic Elasticsearch is a distributed search and analytics engine based on Apache Lucene. Initially released in 2010, it has quickly become the most popular enterprise search engine, and is commonly used for log analytics, full-text search, operational and security intelligence, business analytics, and metrics use cases. Built as a distributed system since its inception, Elasticsearch effortlessly scales to clusters of hundreds of servers.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://2019.tlapl.us/program/tba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://2019.tlapl.us/program/tba/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>